# Des caractères à l'écran -- encodage numérique 

::: {.content-visible when-format="html" unless-format="revealjs"}

```{=html}
<iframe src="_slides/encodage.html"></iframe>
```
[Ouvrir dans mon navigateur](_slides/encodage.html){target="_blank"} 

::: 

## Encodage numérique 

- Un fichier numérique = Une suite de bits (des 0 et des 1) 
  - train/flux de bits : suite de bits (**bi**nary digi**t**)
  - un octet : 
    - une séquence de 8 bits 
    - 2^8^ (256) combinaisons possibles de 0 et de 1 
- Le format : spécifie l'interprétation de cette suite de 0 et de 1 
- Taille d'un fichier numérique : nombre d'instances de 0 et de 1 nécessaires à sa représentation 
- *Codage* : norme qui définit quels sont les caractères utilisables dans un fichier. Toutes les normes ne codent pas les mêmes caractères. (- A. Perret)

## Système de numération en base 2 

> Un ordinateur ne connaît que deux choses: les 1 et les 0. Chaque lettre dans cette phrase, chaque couleur, chaque seconde d’une vidéo ou d’un morceau de musique, chaque page web, chaque programme n’est qu’une longue succession de 1 et de 0. 
> [Mia Combeau](https://www.codequoi.com/binaire-001-compter-et-calculer-comme-un-ordinateur/) 

![](img/binaire.png)

## Mémoire 

- La taille d'un disque dur définit le nombre de bits disponibles pour encoder des informations simultanément. Par exemple, un disque dur de 50 Go de mémoire :

    - est égal à 50 000 000 000 octets (cinquante milliards)
    - est égal à 400 000 000 000 bits (quatre cents milliards)

- La taille d'un fichier définit le nombre de bits nécessaire à son encodage. Par exemple, un fichier d'une taille de 30 Ko :

    - nécessite 30 x 1 000 x 8 bits
    - contient donc un total de 240 000 instances de 1 ou 0

## 0 ou 1 ? 

Tout document conservé sur un ordinateur est constitué d'une série de 0 et de 1. 

Ce sont les normes d'encodage et les formats qui permettent d'interpréter le sens de ces 0 et 1. 

![](img/endoage_binaire.png)

## Normes d'encodage 

- Normes d'encodages = clefs d'encodage/décodage pour passer d'une forme intelligible pour les humains à une forme lisible par la machine ; 
- En fonction du type de fichier encodé (texte, image, vidéo, etc.), il existe différents paysages de normes et de modes de représentation

## Encodage des données textuelles

- Un document numérique textuel contient du texte (caractères alphanumériques et de symboles) ; 
- La norme d'encodage d'un texte == une table de correspondance entre un groupe de bits et un caractère alphanumérique ou un symbole ; 
- La norme d'encodage définit donc la liste des caractères disponibles (```character set```) ; 
- En fonction de la norme, la représentation d'un caractère peut s'étendre sur un ou plusieurs octets
- Les normes les plus connues pour des textes en français sont :

    - ASCII (1963)
    - ISO 8859-1 (1986)
    - UTF-8 (1996)


### ASCII 

- [American Standard Code for Information Interchange](https://fr.wikipedia.org/wiki/American_Standard_Code_for_Information_Interchange) ; 
- Premier jeu de caractères standardisé (1963) ; 
- Norme américano-centrée ; 
- 128 caractères, desquels sont exclus : 
  - les caractères accentués, 
  - tous les alphabets non latins (arabe, cyrillique, hébreu, idéogrammes, etc.) ; 
- 1 caractère = 7 bits 

</section>
<section>


```
 !"#$%&'()*+,-./
0123456789:;<=>?
@ABCDEFGHIJKLMNO
PQRSTUVWXYZ[\]^_
`abcdefghijklmno
pqrstuvwxyz{|}~
```

::: {.callout-note}
Ci-dessus, seulement 95 caractères. Les autres ne sont pas imprimables (dits, caractères *de contrôle*) ; il correspondent plutôt à des actions ou des commandes. 

Ex. : 

- 9 (binaire : 000 1001) = HT (*Horizontal Tab*, ```tab```) 
- 10 (binaire : 000 1010) = LF (*Line Feed*, saut de ligne) 
- 12 (binaire : 000 1100) = FF (*Form Feed*, saut de page) 
- 127 (binaire : 111 1111) = à votre avis ? 

:::

### ISO 8859-1 

- 1986 
- 1 caractères = 8 bits 
- Rétrocompatibilité ASCII ; 
- 256 caractères où chaque caractère est représenté par 8 bits ; 
- Souvent appelée Latin1 mais aussi Western Europe. 
- Manquent : Œ, œ, Ÿ, € (et les alphabts non-latins)

</section>
<section>

```
 !"#$%&'()*+,-./    ¡¢£¤¥¦§¨©ª«¬-®¯
0123456789:;<=>?   °±²³´µ¶·¸¹º»¼½¾¿
@ABCDEFGHIJKLMNO   ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏ
PQRSTUVWXYZ[\]^_   ÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞß
`abcdefghijklmno   àáâãäåæçèéêëìíîï
pqrstuvwxyz{|}~    ðñòóôõö÷øùúûüýþÿ
```

- Exemple: é = ```11101001```

::: {.callout-note}
- ISO 8859-2 (Europe centrale et de l'Est),
- ISO 8859-5 (alphabet cyrillique),
- ISO 8859-6 (caractères courants de l'alphabet arabe), etc.

où seuls changent les codes 128 à 255. 
:::



### Unicode 

- [Table de caractères](https://symbl.cc/fr/unicode-table/) ;  
- Standard universel de représentation de caractères ; 
- Contrairement à ASCII, Unicode ne définit pas l'implémentation du *mapping* ; 
- Indique seulement quel caractère se réfère à quel point de code (où chaque point de code est un nombre hexadécimal (0-9 + A-F) représentant un caractère) ; 
- Le standard Unicode lui-même ne spécifie pas comment ces points de code doivent être stockés en mémoire ou transmis dans des fichiers. C’est là qu’interviennent les encodages Unicode comme UTF-8 ; 
- 1 114 112 positions possibles ; 
- Divisés en *scripts* : collections cohérentes de caractères en usage dans un domaine particulier (symboles monétaires, opérateurs mathématiques, braille, etc). 

### UTF-8 {.smaller}

- Méthode d'encodage 
- 1996 
- [Universal Character Set Transformation Format](https://fr.wikipedia.org/wiki/UTF-8) + base d'encodage (8, 16, 32, ...), soit UTF-8, UTF-16, UTF-32 ; 
- En fonction de la base d'encodage, un caractère peut être représenté par 1, 2, 3 ou 4 octets ; 
- UTF est rétrocompatible avec ASCII, mais pas avec ISO 8859-1. Il s'inscrit dans le cadre établi par Unicode qui vise à faciliter l'échange de textes numériques en assurant leur compatibilité ; 
- Unicode définit plus de 137 000 caractères, issus de multiples alphabets, et prévoit aussi des symboles comme les emojis ; 
- Exemples 
  - A = U+0041 = 01000001 ; 
  - 汉 = U+6C49 = 1110**0110** 10**110001** 10**001001** ; 
  - 🤓 = U+1F913 = 11110**000** 10**011111** 10**100100** 10**010011** ; 

## Mauvais encodage/décodage

Si on n'utilise pas la bonne clef d'encodage ou de décodage d'un texte, on risque d'obtenir un texte partiellement ou entièrement illisible.

UTF-8 ouvert avec 8859-1 (Latin 1)

> La Joconde, ou Portrait de Mona Lisa, est un tableau de l'artiste LÃ©onard de Vinci, rÃ©alisÃ© entre 1503 et 1506 ou entre 1513 et 15161,2, et peut-Ãªtre jusqu'Ã  1519 (l'artiste Ã©tant mort cette annÃ©e-lÃ , le 2 mai)3, qui reprÃ©sente un portrait mi-corps, probablement celui de la Florentine Lisa Gherardini, Ã©pouse de Francesco del Giocondo. Acquise par FranÃ§ois Ier, cette peinture Ã  l'huile sur panneau de bois de peuplier de 77 Ã 53 cm est exposÃ©e au musÃ©e du Louvre Ã  Paris. La Joconde est l'un des rares tableaux attribuÃ©s de faÃ§on certaine Ã  LÃ©onard de Vinci.

</section>
<section>

UTF-8 ouvert avec ISO 8859-5 (Cyrillic)

> La Joconde, ou Portrait de Mona Lisa, est un tableau de l'artiste LУЉonard de Vinci, rУЉalisУЉ entre 1503 et 1506 ou entre 1513 et 15161,2, et peut-УЊtre jusqu'У  1519 (l'artiste УЉtant mort cette annУЉe-lУ , le 2 mai)3, qui reprУЉsente un portrait mi-corps, probablement celui de la Florentine Lisa Gherardini, УЉpouse de Francesco del Giocondo. Acquise par FranУЇois Ier, cette peinture У  l'huile sur panneau de bois de peuplier de 77 У 53 cm est exposУЉe au musУЉe du Louvre У  Paris. La Joconde est l'un des rares tableaux attribuУЉs de faУЇon certaine У  LУЉonard de Vinci.

## Une norme ? 

UTF s'impose désormais comme la norme

![diagramme montrant qu'UTF s'impose sur les autres normes depuis 2006](img/encoding_trends.png)

D'après W3Techs, 97,8% des pages web qui déclarent un encodage suivent UTF-8 aujourd'hui.

(source du graphique: Wikimedia)
